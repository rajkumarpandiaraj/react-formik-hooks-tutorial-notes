                                                35.TEXTAREA

To create form elements, there are three main steps :
        1.Defining the Field(textarea)
        2.Returning that Field in FormikControl
        3.calling the FormikControl in FormikContainer and  adding the initialValues

In Components folder
        FormikContainer.js
        FormikControl.js
        TextArea.js(new)
        TextError.js

/////////////////////////////////////////////////////////////////////////////////

STEP 1 :
    In TextArea.js

    import React from 'react'
    import {Field,ErrorMessage} from 'formik';
    import TextError from 'TextError'

    const TextArea = (props) =>{
        const {label, name, ...rest} = props;
        return (
            <div className='form-control'>
                <label htmlFor={name}>{label}</label>
                <Field as='textarea' id={name} name={name} {...rest}/>
                <ErrorMessage name={name} component={TextError}/>
            </div>
        )
    }

    export default TextArea;

    In TextError.js

    import React from 'react'
    const TextError = props =>{
        return (
            <div className='error'>
                {props.children}
            </div>
        )
    }
////////////////////////////////////////////////////////////////////////////////////////////////////

STEP 2  :
    -> Input component is add to the respective case

In FormikControl.js

import React from 'react';
import Input from 'Input';
import TextArea from 'TextArea'

const FormikControl = props =>{
    const { control, ...rest } = props;

    switch(controls) {
        case 'input' :
            return <Input {...rest}/>
        case 'textarea' :  <TextArea {...rest}/>
        case 'select' :
        case 'radio' :
        case 'checkbox' :
        case 'date' :
        default : return null
    }
}

export default FormikControl

//////////////////////////////////////////////////////////////////////////////////////////////////////////

STEP 3

    -> adding the initialValues for email and validation for email and calling the FormikControl component with(control, type, name) props.

    In FormikContainer.js


    import React from 'react';
    import { Formik,Form } from 'Formik'
    import * as Yup from 'yup';
    import FormikControl from 'FormikControl';
    

    const FormikContainer = () =>{
        const initialvalues = {
            email : '',
            description : '',
        }
        const validationSchema = Yup.object({
            email : Yup.string().email('Invalid format').required('Required')
            description : Yup.string().required('Required')
        })
        const onSubmit = values =>{
            console.log(values);
        }
        <Formik
            initialvalues={initialvalues}
            validationSchema={validationSchema}
            onSubmit={onSubmit}
        >
            {
                formik => {
                    <Form>
                        <FormikControl 
                            control='input' 
                            type='email' 
                            name='email' 
                            label='Email'
                            />
                        <FormikControl 
                            control='textarea'
                            name='description'
                            label='Description'
                            />
                        <button type='submit'>Submit</button>
                    </Form>
                }
            }
        </Formik>
    }

    export default FormikContainer